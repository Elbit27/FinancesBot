from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import F, Router
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from bot.database.db_utils import get_income_categories, save_incomes

router = Router()

# --- FSM: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π ---
class ExpensesStates(StatesGroup):
    choosing_category_income = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    entering_body_income = State() # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    entering_amount_income = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã



# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ "+" ---
@router.message(F.text == "+")
async def choose_category(message: Message, state: FSMContext) -> None:
    cats = await get_income_categories()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=cat)] for cat in cats],
        resize_keyboard=True
    )
    await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ—Ö–æ–¥–æ–≤:', reply_markup=keyboard)
    await state.set_state(ExpensesStates.choosing_category_income)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
@router.message(ExpensesStates.choosing_category_income)
async def enter_amount(message: Message, state: FSMContext) -> None:
    category = message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    await state.update_data(category=category)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await message.reply('–ù–∞ —Å–∫–æ–ª—å–∫–æ —É–≤–µ–ª–∏—á–∏–ª—Å—è –≤–∞—à –±–∞–ª–∞–Ω—Å? –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:', reply_markup=ReplyKeyboardRemove())
    await state.set_state(ExpensesStates.entering_amount_income)  # –ñ–¥–µ–º —Å—É–º–º—É


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—É–º–º—ã ---
@router.message(ExpensesStates.entering_amount_income)
async def enter_body(message: Message, state: FSMContext) -> None:
    amount = message.text  # –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É
    if not amount.isdigit():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞ —á–∏—Å–ª–æ–≤–∞—è
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É!")
        return

    await state.update_data(amount=amount)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É
    await message.reply("–ü–∞—Ä—É —Å–ª–æ–≤ —Ç—É–¥–∞ —Å—é–¥–∞ –ø–æ–¥—Ä–æ–±–Ω–µ–µ:")
    await state.set_state(ExpensesStates.entering_body_income)  # –ñ–¥–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è (body) ---
@router.message(ExpensesStates.entering_body_income)
async def save_income_handler(message: Message, state: FSMContext) -> None:
    body = message.text  # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    await state.update_data(body=body)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ

    user_data = await state.get_data()  # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    category = user_data['category']
    amount = user_data['amount']

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î (–∑–∞–º–µ–Ω–∏ print() –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É)
    await save_incomes(category, amount, body)

    await message.reply(f"‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ: {amount} —Å–æ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category} \nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {body}")
    # print(amount, category, body)
    await state.clear()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ